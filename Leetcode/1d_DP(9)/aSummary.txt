TOP DOWN dp is about:
memoization - caching of recursive call values and checking the
cache before you recurse again can help

do basic recursion, then look for optimization 
(like memoization or just using vars instead of table)

BOTTOM UP
Consider the smallest possible problem, 
-base cases
-start from the end and go to the start
Make the problem easier by splitting, truncating - solve that
The sub-problems help to determine the final solution


Either you do or you don't - 2 choices - O(2^n) solution
Easy to solve with recursion, can be simplified
with DP

DP can be space optimized if all the numbers in the array don't matter
for one decision
